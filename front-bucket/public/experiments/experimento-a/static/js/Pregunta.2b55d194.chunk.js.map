{"version":3,"sources":["views/Pregunta.tsx"],"names":["PreguntaSchema","Yup","shape","edad","required","nivelEducativo","optionShape","nivelesEducativos","initialValues","withRouter","props","appStyles","useAppStyles","dispatch","React","useContext","AppContext","variant","className","title","container","style","marginTop","validationSchema","onSubmit","type","data","parseInt","route","history","push","values","handleChange","handleBlur","handleSubmit","setFieldValue","submitCount","isValid","id","fullWidth","formControl","formLabel","value","onChange","target","isNumber","isNaN","slice","onBlur","inputProps","pattern","inputMode","name","component","CustomErrorMessage","label","mobileAlignBottom","color","form"],"mappings":"oJAAA,gHAmBMA,EAAiBC,MAAaC,MAAM,CACxCC,KAAMF,MAAaG,SAAS,2BAC5BC,eAAgBC,YAAYC,OAQxBC,EAA4B,CAChCL,KAAM,GACNE,eAAgB,GA0FHI,uBAvFE,SAACC,GAChB,IAAMC,EAAYC,cAEVC,EAAaC,IAAMC,WAAWC,KAA9BH,SAiBR,OACE,oCACE,kBAAC,IAAD,CAAYI,QAAQ,KAAKC,UAAWP,EAAUQ,OAA9C,+BAIA,kBAAC,IAAD,CAAMC,WAAS,EAACC,MAAO,CAAEC,UAAW,KAClC,kBAAC,IAAD,CACEd,cAAeA,EACfe,iBAAkBvB,EAClBwB,SAzBO,SAAC,GAA0C,IAAxCrB,EAAuC,EAAvCA,KAAME,EAAiC,EAAjCA,eACtBQ,EAAS,CACPY,KAAM,2BACNC,KAAM,CACJvB,KAAMwB,SAASxB,GACfE,oBAGJQ,EAAS,CACPY,KAAM,iBACNG,MAAO,cAETlB,EAAMmB,QAAQC,KAAK,cAeZ,gBACCC,EADD,EACCA,OACAC,EAFD,EAECA,aACAC,EAHD,EAGCA,WACAC,EAJD,EAICA,aACAC,EALD,EAKCA,cALD,EAMCC,YAND,EAOCC,QAPD,OASC,0BAAMb,SAAUU,EAAcI,GAAG,iBAC/B,kBAAC,IAAD,CAAaC,WAAS,EAACrB,UAAWP,EAAU6B,aAC1C,kBAAC,IAAD,CAAWtB,UAAWP,EAAU8B,WAAhC,QACA,kBAAC,IAAD,CACEH,GAAG,OACHI,MAAOX,EAAO5B,MAAQ,GACtBsB,KAAK,OACLkB,SAAU,YAA4B,IAAfD,EAAc,EAAxBE,OAAUF,MACjBG,GAAYC,MAAMnB,SAASe,IAC/BP,EAAc,OAAQU,EAAWH,EAAMK,MAAM,EAAG,GAAK,KAEvDC,OAAQf,EACRgB,WAAY,CACVC,QAAS,aACTC,UAAW,WAEb9B,MAAO,CACLC,UAAW,UAGf,kBAAC,IAAD,CAAc8B,KAAK,OAAOC,UAAWC,OAEvC,kBAAC,IAAD,CACEhB,GAAG,iBACHiB,MAAM,mBACNxB,OAAQxB,IACRmC,MAAOX,EAAO1B,eACdsC,SAAUX,SAOpB,kBAAC,IAAD,CAAMd,UAAWP,EAAU6C,mBACzB,kBAAC,IAAD,CACEC,MAAM,UACNF,MAAM,YACN9B,KAAK,SACLiC,KAAK","file":"static/js/Pregunta.2b55d194.chunk.js","sourcesContent":["import React from 'react'\nimport { FormControl, FormLabel, Grid, Typography } from '@material-ui/core'\n\nimport { withRouter, RouteComponentProps } from 'react-router'\n\nimport {\n  Button,\n  useAppStyles,\n  TextField,\n  Select,\n  CustomFormikErrorMessage as CustomErrorMessage,\n} from '@elgatoylacaja/components'\nimport { AppContext } from '../contexts/AppContext'\n\nimport * as Yup from 'yup'\n\nimport { Formik, ErrorMessage } from 'formik'\nimport { optionShape, nivelesEducativos } from '@elgatoylacaja/utils'\n\nconst PreguntaSchema = Yup.object().shape({\n  edad: Yup.number().required('Este campo es requerido'),\n  nivelEducativo: optionShape(nivelesEducativos),\n})\n\ntype FormValues = {\n  edad: number | string\n  nivelEducativo: number\n}\n\nconst initialValues: FormValues = {\n  edad: '',\n  nivelEducativo: 0,\n}\n\nconst Pregunta = (props: RouteComponentProps) => {\n  const appStyles = useAppStyles()\n\n  const { dispatch } = React.useContext(AppContext)\n\n  const submit = ({ edad, nivelEducativo }: FormValues) => {\n    dispatch({\n      type: 'SAVE_PREGUNTAS_FORM_DATA',\n      data: {\n        edad: parseInt(edad as string),\n        nivelEducativo,\n      },\n    })\n    dispatch({\n      type: 'REGISTER_VISIT',\n      route: '/pregunta',\n    })\n    props.history.push('/thanks')\n  }\n\n  return (\n    <>\n      <Typography variant=\"h1\" className={appStyles.title}>\n        Esto Ãºltimo y terminamos\n      </Typography>\n\n      <Grid container style={{ marginTop: 10 }}>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={PreguntaSchema}\n          onSubmit={submit}\n        >\n          {({\n            values,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            setFieldValue,\n            submitCount,\n            isValid,\n          }) => (\n            <form onSubmit={handleSubmit} id=\"pregunta-form\">\n              <FormControl fullWidth className={appStyles.formControl}>\n                <FormLabel className={appStyles.formLabel}>Edad</FormLabel>\n                <TextField\n                  id=\"edad\"\n                  value={values.edad || ''}\n                  type=\"text\"\n                  onChange={({ target: { value } }) => {\n                    let isNumber = !isNaN(parseInt(value))\n                    setFieldValue('edad', isNumber ? value.slice(0, 2) : '')\n                  }}\n                  onBlur={handleBlur}\n                  inputProps={{\n                    pattern: '[0-9]{1,2}',\n                    inputMode: 'numeric',\n                  }}\n                  style={{\n                    marginTop: '10px',\n                  }}\n                />\n                <ErrorMessage name=\"edad\" component={CustomErrorMessage} />\n              </FormControl>\n              <Select\n                id=\"nivelEducativo\"\n                label=\"Nivel educativo:\"\n                values={nivelesEducativos}\n                value={values.nivelEducativo}\n                onChange={handleChange}\n              />\n            </form>\n          )}\n        </Formik>\n      </Grid>\n\n      <Grid className={appStyles.mobileAlignBottom}>\n        <Button\n          color=\"primary\"\n          label=\"Continuar\"\n          type=\"submit\"\n          form=\"pregunta-form\"\n        />\n      </Grid>\n    </>\n  )\n}\n\nexport default withRouter(Pregunta)\n"],"sourceRoot":""}